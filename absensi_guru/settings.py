"""
Django settings for absensi_guru project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
from sys import platform
from pathlib import Path
from os.path import abspath
import os
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# Base URL settings, important!
BASE_URL = 'https://absen.smkn1cibinong.sch.id'

# Take environment variables from .env file
environ.Env.read_env(os.path.join(BASE_DIR, '.env-dev'))

env = environ.Env(
    DEBUG=(bool, False)
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')

ALLOWED_HOSTS = ['localhost', '10.5.0.4', '192.168.100.120', '0.0.0.0', '127.0.0.1', 'absen.smkn1cibinong.sch.id']
SECURE_SSL_REDIRECT = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'absen',
    'face_detection',
    'administrator',
    'userauth',
    'laporan',
    'crispy_forms',
    'sslserver',
    'rest_framework',
    'active_link',
    'django_crontab'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django_session_timeout.middleware.SessionTimeoutMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'absensi_guru.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DB'),
        'USER': env('USERDB'),
        'PASSWORD': env('PASS'),
        'HOST': env('HOST'),
        'PORT': '5432'
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Jakarta'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, '/static')
STATICFILES_DIRS = [
    Path(BASE_DIR, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LANDMARK_COORDINATES = (
    -6.521734188356316, 
    106.8074730831187
)

LOGIN_REDIRECT_URL = '/absen'

LOGIN_URL = '/login'

MEDIA_URL = '/media/'

MEDIA_ROOT = Path(BASE_DIR, 'media')

CORS_ORIGIN_ALLOW_ALL = False

CORS_ORIGIN_WHITELIST = (
    BASE_URL,
)

SESSION_EXPIRE_SECONDS = 60 * 45

CRONJOBS = [
    ('1 0 * * *', 'absen.cron.reset_records'),
    ('1 0 * * *', 'absen.cron.auto_fill_presence')
]

if platform == "linux" or platform == "linux2":
    MEDIA_ABS_PATH = "/"+abspath('settings.py').replace("\\", "/").strip("/absensi_guru/settings.py")
elif platform == "win32":
    MEDIA_ABS_PATH = abspath('settings.py').replace("\\", "/").strip("/absensi_guru/settings.py")

API_SERVER = BASE_URL + "/face_detection/detect/"

CHECKIN_TIME = 7

CHECKOUT_TIME = 16

IS_UPDATE = True

# API Global Settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ]
}

# Security Settings
# CSRF_COOKIE_SECURE = True
# SESSION_COOKIE_SECURE = True
# SECURE_HSTS_SECONDS = True
